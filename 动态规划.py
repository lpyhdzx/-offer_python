#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @Time    : 2019/6/10 22:35
# @Author  : liupeiyu
# @File    : 动态规划.py
# 背包问题/跳台阶 的基本解法和本质区别
# 背包问题的本质是选择还是不选择；
# 跳台阶的本质是i这一点的返回值只和前面有限个数有关，而背包则是和选择或者不选择的之前的所有的结果有关；
# 区别是，背包中经过的数值并不是每一个都参与计算，因此只能用“达到这个点的时候的最大结果是啥”来描述某一点的状态；
# 而跳台阶则是每一个value都参与计算，因此可以用递推法从低向上得到所有的值。
# 进一步：背包问题是个选择问题，跳台阶是个排序问题，所有都参与，只要最大的，选择的话则是选择其中某几个参与的最大的
class Solution:
    def maxres(self,n):
        pass
